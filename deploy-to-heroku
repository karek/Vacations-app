#!/bin/bash

# Requirements before first run on each machine:
# * install heroku toolbelt -- https://toolbelt.heroku.com
# * add heroku binary folder to $PATH, as instructed by the installer
# * authorize your SSH key -- simply run heroku keys:add

########################################
# helper functions
########################################

# emphasized echo message
empcho() {
    local emph=$(echo -en "\033[7m")
    local norm=$(echo -en "\033[0m")
    local lmark=">>--"
    local rmark="--<<"
    echo -e "$emph$lmark ${@} $rmark$norm"
}

# error handler
# params: $1 = exit code, $2 = optional failed routine name
fatal_error() {
    empcho "$2 failed with code $1"
    exit $1
}

########################################
# main functions
########################################

heroku_check() {
    # login if not logged in
    echo "checking heroku login:"
    heroku auth:whoami || fatal_error $? "heroku login"
    echo

    # add heroku remote if not present
    if [ -z "$(git remote | grep heroku)" ]; then
        heroku git:remote --app vacations-test || fatal_error $? "add heroku git remote"
        echo
    fi
}

print_status() {
    # some information
    echo "status:"
    git status -sb
}

# ask for confirmation with prompt from parameter $1.
make_sure() {
    echo
    echo -n "$1 [y/N] "
    # make sure 
    read answer
    if [ "$answer" != 'Y' ] && [ "$answer" != 'y' ]; then
        empcho "aborted."
        exit 2
    fi
}

# deploy current repo state to heroku
heroku_deploy() {
    make_sure "Deploy to heroku?"
    git push heroku master || fatal_error $? "git push to heroku"
    empcho "DEPLOY SUCCESSFUL"
    return 0
}

# run syncdb remotely (with confirmation)
heroku_run_syncdb() {
    make_sure "Run syncdb on heroku?"
    heroku run python manage.py syncdb || fatal_error $? "heroku syncdb failed"
    empcho "DATABASE SYNCED"
    return 0
}

########################################
# script main body
########################################

# no special arguments so far
heroku_check
print_status
heroku_deploy
heroku_run_syncdb
